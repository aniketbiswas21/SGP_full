{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ANIKET BISWAS\\\\Desktop\\\\Student-Grievances-Portal-master-branch\\\\Student-Grievance-Portal\\\\react_front_end\\\\src\\\\context\\\\AuthState.js\";\nimport React, { useReducer } from 'react';\nimport authContext from './AuthContext';\nimport authReducer from './authReducer';\nimport axios from 'axios';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS, UPDATE_SUCCESS, UPDATE_FAIL } from './types';\nimport setAuthToken from '../utils/SetAuthToken';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState); //Load User\n\n  const loadUser = async () => {\n    //console.log(localStorage.token);\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get('http://localhost:4000/api/users/me'); // console.log(res.data);\n\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  }; //Register User\n\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('http://localhost:4000/api/users', formData, config); // console.log(res.data.token);\n\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      }); // console.log(localStorage.token);\n\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; //Login User\n\n\n  const login = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('http://localhost:4000/api/auth', formData, config); // console.log(res.data);\n\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; //Update User\n\n\n  const update = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.put('http://localhost:4000/api/users/me', formData, config); // console.log(res.data.token);\n\n      dispatch({\n        type: UPDATE_SUCCESS,\n        payload: res.data\n      }); // console.log(localStorage.token);\n\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: UPDATE_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; //Logout\n\n\n  const logout = () => dispatch({\n    type: LOGOUT\n  }); //Clear Errors\n\n\n  const clearErrors = () => dispatch({\n    type: CLEAR_ERRORS\n  });\n\n  return React.createElement(authContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      register,\n      clearErrors,\n      loadUser,\n      logout,\n      login\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["C:/Users/ANIKET BISWAS/Desktop/Student-Grievances-Portal-master-branch/Student-Grievance-Portal/react_front_end/src/context/AuthState.js"],"names":["React","useReducer","authContext","authReducer","axios","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","UPDATE_SUCCESS","UPDATE_FAIL","setAuthToken","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","user","error","state","dispatch","loadUser","res","get","type","payload","data","err","register","formData","config","headers","post","response","msg","login","update","put","logout","clearErrors","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\r\nimport authContext from './AuthContext';\r\nimport authReducer from './authReducer';\r\nimport axios from 'axios';\r\nimport {REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n     USER_LOADED,\r\n     AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    CLEAR_ERRORS,\r\nUPDATE_SUCCESS,\r\nUPDATE_FAIL} from './types';\r\nimport setAuthToken from '../utils/SetAuthToken';\r\n\r\n\r\nconst AuthState = (props) =>{\r\n    const initialState={\r\n       token:localStorage.getItem('token'),\r\n       isAuthenticated: null,\r\n       loading:true,\r\n       user:null,\r\n       error:null\r\n    };\r\n    const [state, dispatch]= useReducer(authReducer,initialState);\r\n    \r\n    //Load User\r\n     const loadUser = async () =>{\r\n         //console.log(localStorage.token);\r\n        if(localStorage.token){\r\n            setAuthToken(localStorage.token);\r\n        }\r\n\r\n        try {\r\n            const res = await axios.get('http://localhost:4000/api/users/me');\r\n            // console.log(res.data);\r\n            dispatch({\r\n                type: USER_LOADED, \r\n                payload: res.data \r\n            });\r\n        } catch (err) {\r\n            dispatch({ type: AUTH_ERROR})\r\n        }\r\n     }\r\n\r\n    //Register User\r\n    const register = async formData =>{\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        try{\r\n            const res = await axios.post('http://localhost:4000/api/users', formData, config);\r\n            // console.log(res.data.token);\r\n            dispatch({\r\n                type: REGISTER_SUCCESS,\r\n                payload: res.data\r\n            })\r\n            // console.log(localStorage.token);\r\n            loadUser();\r\n        } catch(err){\r\n            dispatch({\r\n                type: REGISTER_FAIL,\r\n              payload: err.response.data.msg\r\n            })\r\n        }\r\n    }\r\n\r\n    //Login User\r\n    const login = async formData =>{\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        try{\r\n            const res = await axios.post('http://localhost:4000/api/auth', formData, config);\r\n            // console.log(res.data);\r\n\r\n            dispatch({\r\n                type: LOGIN_SUCCESS,\r\n                payload: res.data\r\n            })\r\n            loadUser();\r\n        } catch(err){\r\n            dispatch({\r\n                type: LOGIN_FAIL,\r\n                payload: err.response.data.msg\r\n            })\r\n        }\r\n    }\r\n    //Update User\r\n    const update = async formData =>{\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        try{\r\n            const res = await axios.put('http://localhost:4000/api/users/me', formData, config);\r\n            // console.log(res.data.token);\r\n            dispatch({\r\n                type: UPDATE_SUCCESS,\r\n                payload: res.data\r\n            })\r\n            // console.log(localStorage.token);\r\n            loadUser();\r\n        } catch(err){\r\n            dispatch({\r\n                type: UPDATE_FAIL,\r\n              payload: err.response.data.msg\r\n            })\r\n        }\r\n    }\r\n\r\n    //Logout\r\n    const logout = () => dispatch({type:LOGOUT })\r\n\r\n    //Clear Errors\r\n    const clearErrors = () => dispatch({type:CLEAR_ERRORS})\r\n\r\n    return(\r\n        <authContext.Provider \r\n        value={{\r\n            token: state.token,\r\n            isAuthenticated: state.isAuthenticated,\r\n            loading: state.loading,\r\n            user: state.user,\r\n            error: state.error,\r\n            register,\r\n            clearErrors,\r\n            loadUser,\r\n            logout,\r\n            login\r\n\r\n         }}>\r\n            {props.children}\r\n        </authContext.Provider>\r\n    );\r\n\r\n\r\n};\r\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}