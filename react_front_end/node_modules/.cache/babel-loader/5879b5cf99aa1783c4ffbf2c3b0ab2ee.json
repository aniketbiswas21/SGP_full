{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ANIKET BISWAS\\\\Desktop\\\\Student-Grievances-Portal-master-branch\\\\Student-Grievance-Portal\\\\react_front_end\\\\src\\\\context\\\\IssueState.js\";\nimport React, { useReducer } from 'react';\nimport issueContext from './issueContext';\nimport IssueReducer from './IssueReducer';\nimport axios from 'axios';\nimport { ADD_ISSUE, ISSUE_FAIL, RESET } from './types';\n\nconst IssueState = props => {\n  const initialState = {\n    issue: null,\n    error: null,\n    isAdded: null\n  };\n  const [state, dispatch] = useReducer(IssueReducer, initialState); // Add a Issue\n\n  const addIssue = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('http://localhost:4000/api/issues', formData, config);\n      console.log(res.data);\n      dispatch({\n        type: ADD_ISSUE,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: ISSUE_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  const reset = () => {\n    dispatch({\n      type: RESET\n    });\n  };\n\n  return React.createElement(issueContext.Provider, {\n    value: {\n      issue: state.issue,\n      error: state.error,\n      isAdded: state.isAdded,\n      addIssue,\n      reset\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default IssueState;","map":{"version":3,"sources":["C:/Users/ANIKET BISWAS/Desktop/Student-Grievances-Portal-master-branch/Student-Grievance-Portal/react_front_end/src/context/IssueState.js"],"names":["React","useReducer","issueContext","IssueReducer","axios","ADD_ISSUE","ISSUE_FAIL","RESET","IssueState","props","initialState","issue","error","isAdded","state","dispatch","addIssue","formData","config","headers","res","post","console","log","data","type","payload","err","response","msg","reset","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,UAAnB,EAA8BC,KAA9B,QAA0C,SAA1C;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IAAU;AACzB,QAAMC,YAAY,GAAC;AACfC,IAAAA,KAAK,EAAC,IADS;AAEfC,IAAAA,KAAK,EAAE,IAFQ;AAGfC,IAAAA,OAAO,EAAE;AAHM,GAAnB;AAKA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAmBd,UAAU,CAACE,YAAD,EAAcO,YAAd,CAAnC,CANyB,CAOzB;;AACA,QAAMM,QAAQ,GAAG,MAAMC,QAAN,IAAiB;AAC9B,UAAMC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;;AAKA,QAAG;AACC,YAAMC,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAN,CAAW,kCAAX,EAA+CJ,QAA/C,EAAyDC,MAAzD,CAAlB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;AACAT,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAEpB,SADD;AAELqB,QAAAA,OAAO,EAAEN,GAAG,CAACI;AAFR,OAAD,CAAR;AAKH,KARD,CAQE,OAAMG,GAAN,EAAU;AACRZ,MAAAA,QAAQ,CAAC;AACLU,QAAAA,IAAI,EAAEnB,UADD;AAEPoB,QAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaJ,IAAb,CAAkBK;AAFpB,OAAD,CAAR;AAIH;AACJ,GApBD;;AAqBA,QAAMC,KAAK,GAAG,MAAK;AACff,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAClB;AADA,KAAD,CAAR;AAGH,GAJD;;AAMA,SACI,oBAAC,YAAD,CAAc,QAAd;AACA,IAAA,KAAK,EAAE;AACHI,MAAAA,KAAK,EAACG,KAAK,CAACH,KADT;AAEHC,MAAAA,KAAK,EAACE,KAAK,CAACF,KAFT;AAGHC,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAHZ;AAIHG,MAAAA,QAJG;AAKHc,MAAAA;AALG,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASKrB,KAAK,CAACsB,QATX,CADJ;AAeH,CAlDD;;AAmDA,eAAevB,UAAf","sourcesContent":["import React, {useReducer} from 'react';\r\nimport issueContext from './issueContext';\r\nimport IssueReducer from './IssueReducer';\r\nimport axios from 'axios';\r\nimport {ADD_ISSUE, ISSUE_FAIL,RESET} from './types';\r\n\r\n\r\nconst IssueState = (props) =>{\r\n    const initialState={\r\n        issue:null,\r\n        error: null,\r\n        isAdded: null\r\n    }\r\n    const [state, dispatch]= useReducer(IssueReducer,initialState);\r\n    // Add a Issue\r\n    const addIssue = async formData =>{\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        try{\r\n            const res = await axios.post('http://localhost:4000/api/issues', formData, config);\r\n            console.log(res.data);\r\n            dispatch({\r\n                type: ADD_ISSUE,\r\n                payload: res.data\r\n            })\r\n\r\n        } catch(err){\r\n            dispatch({\r\n                type: ISSUE_FAIL,\r\n              payload: err.response.data.msg\r\n            })\r\n        }\r\n    }\r\n    const reset = () =>{\r\n        dispatch({\r\n            type:RESET\r\n        })\r\n    }\r\n\r\n    return(\r\n        <issueContext.Provider \r\n        value={{\r\n            issue:state.issue,\r\n            error:state.error,\r\n            isAdded: state.isAdded,\r\n            addIssue,\r\n            reset\r\n\r\n         }}>\r\n            {props.children}\r\n        </issueContext.Provider>\r\n    );\r\n\r\n\r\n};\r\nexport default IssueState;"]},"metadata":{},"sourceType":"module"}